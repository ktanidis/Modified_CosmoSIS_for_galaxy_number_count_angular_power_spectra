[runtime]
sampler = metropolis


[metropolis]
; save output every 50 samples
nsteps=50
; start at the specified position in the values file, not randomly
random_start=F
; take this many total samples
samples=20000
; Tune the proposal from sample 200 to sample 2000 every 100 samples
; by taking the covariance of the chain
tuning_frequency = 100
tuning_grace = 200
tuning_end = 2000


[output]
format=txt
filename=example_a.txt


[pipeline]
modules = consistency camb planck
values = examples/values_a.ini
priors = examples/priors_a.ini
likelihoods = planck2015
quiet=F
debug=F
timing=F


[planck]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so
data_1 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/plik_lite_v18_TT.clik
data_2 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/commander_rc2_v1.1_l2_29_B.clik
; You can also add more here
; and lensing files can be included with, e.g.:
;lensing_1 = /path/to/wherever/you/downloaded/data/smica_g30_ftl_full_pttptt.clik_lensing


; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=cmb
lmax=2650
feedback=0
do_tensors=T
do_lensing=T
do_nonlinear=T
high_ell_template=cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
; because we will be using the Planck likelihood we also need to set the
; accuracy to higher values. This makes a big difference to the likelihood values (delta log L ~ 36)
accuracy_boost=1.1  ;CAMB accuracy boost parameter
high_accuracy_default=T
