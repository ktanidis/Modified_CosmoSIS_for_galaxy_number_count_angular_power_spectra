;***********************************
;multinest is the default sampler
;***********************************
[runtime]
sampler = test
root = ${COSMOSIS_SRC_DIR}


[test]
save_dir=lsst1
fatal-errors = T
fatal_errors = T

[pipeline]
quiet=F
timing=T
debug=F
modules = consistency camb halofit extrapolate smail_nz unbiased_galaxies nonlinear_linear_alignment   pk_to_cl bias  add_intrinsic save_simulation 
values = examples/lsst_forecast/lsst_values.ini
likelihoods = 


#This section saves the output 
[save_simulation]
file = cosmosis-standard-library/likelihood/2pt/save_2pt.py
shear_nz_name = source
position_nz_name = source
filename = lsst_simulation.fits
clobber = T
make_covariance = T
;These values define the survey and the observations being made
;First, some details of the survey itself:
survey_area = 18000.0
number_density_shear_bin =  5.5 5.5 5.5 5.5 5.5 5.5 5.5 5.5 5.5 5.5 
number_density_lss_bin = 5.5 5.5 5.5 5.5 5.5 5.5 5.5 5.5 5.5 5.5 
sigma_e_bin = 0.2  0.2  0.2  0.2  0.2 0.2 0.2 0.2 0.2 0.2
;Then the observations we will generate:
ell_min = 100.0
ell_max = 5000.0
n_ell = 20


[unbiased_galaxies]
file = cosmosis-standard-library/bias/no_bias/no_bias.py




#The remainder of the pipeline is identical to the one used in the lsst_analyze.ini
#file adjacent to this one.
#We could put this text in a file lsst_common.ini and use the command:
#%include lsst_common.ini but I didn't want to people.

[nonlinear_linear_alignment]
file = cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
method = bk_corrected
do_galaxy_intrinsic = T

[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
shear-shear=T
position-shear=T


[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0

[extrapolate]
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py 
kmax = 500.

[sigma8_rescale]
file = cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so

[bias]
file = cosmosis-standard-library/bias/binwise_bias/bin_bias.py


; This module uses the Limber approximation to compute shear-shear C_ell
; given the shear kernel (which is derived from the number density and 
; from geometry)

[pk_to_cl]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 100.0
ell_max = 5000.0
n_ell = 200
shear-shear = source-source
position-shear = source-source
position-position=source-source
shear-intrinsic = source-source
intrinsic-intrinsic = source-source
position-intrinsic = source-source
verbose = T


[smail_nz]
file = cosmosis-standard-library/number_density/smail/photometric_smail.py
zmax = 4.0
dz = 0.01
nbin = 10
input_section = number_density_params
output_section = nz_source
