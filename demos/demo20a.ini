; This file is identical to demo5.ini except that we have taken out all
; references to the riess11 likelihood, which tightened the parameter
; space in the H0 direction.  The idea is that we will re-introduce this
; in demo20b.ini, as a separated step.


[runtime]
; The emcee sampler, which uses the Goodman & Weare algorithm.
sampler = emcee

[emcee]
; The emcee sampler uses the concept of walkers, a collection of live points.
; Sampling is done along lines that connect pairs of walkers.  The number of
; walkers must be at least 2*nparam + 1, but in general more than that usually
; works better.
walkers = 64
; This many samples is overkill, just to make the plots look a lot nicer.
samples = 400
; This is the interval at which convergence diagnostics are performed.
nsteps = 100

[output]
;  This file will be passed along to Demo 20b.
filename = demo20a.txt
format = text
verbosity= debug

[pipeline]
; We use only the JLA likelihood (for high redshift).
modules = consistency camb jla
values = demos/values5.ini
extra_output =
likelihoods = jla
quiet=T
debug=F
timing=F


[camb]
; For background-only data we do not need a full Boltzmann evaluation, just
; D(z), etc.  Setting mode=background means we get this.
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=background
feedback=0

[jla]
; JLA needs quite a lot of parameters telling it where data files are...
file = cosmosis-standard-library/supernovae/jla_v3/jla.so
data_dir = $COSMOSIS_SRC_DIR/cosmosis-standard-library/supernovae/jla_v3/data
data_file = jla_lcparams.txt
scriptmcut = 10.0
mag_covmat_file = jla_v0_covmatrix.dat
stretch_covmat_file = jla_va_covmatrix.dat
colour_covmat_file = jla_vb_covmatrix.dat
mag_stretch_covmat_file = jla_v0a_covmatrix.dat
mag_colour_covmat_file = jla_v0b_covmatrix.dat
stretch_colour_covmat_file = jla_vab_covmatrix.dat

; The consistency module translates between our chosen parameterization and any
; other that modules in the pipeline may want (e.g. camb).
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py
