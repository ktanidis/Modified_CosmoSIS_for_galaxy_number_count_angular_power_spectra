[runtime]
; The test sampler just runs a single parameter set
sampler = test

[test]
; These are the parameters for this sampler.
; In this case there is just one parameter
save_dir=eft

; If something goes wrong this will aid diagnosis
fatal_errors=T

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
[pipeline]
; The list of modules to be run, in this order.
; The modules named here must appear as sections below
modules = consistency eftcamb halofit
; The file to get cosmological and nuisance parameters
; from.
values = cosmosis/dev/eft_values.ini
; Not used here, becuase we are not sampling
likelihoods = 
extra_output = 
quiet=F
debug=T
timing=F

; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

; A module!  Camb, set to a mode where it does
; background evolution, CMB, and matter power
[eftcamb]
file = cosmosis-standard-library/boltzmann/eftcamb/camb.so
mode=all
lmax=2500
feedback=5

#      EFTflag = 0 : GR code. Every EFT modification is ignored.
#      EFTflag = 1 : Pure EFT code.
#      EFTflag = 2 : Designer matching EFT.
#      EFTflag = 3 : Matching EFT.
EFTflag = 1

# Background Dark Energy equation of state flag:
#      EFTwDE = 0 : Cosmological constant
#      EFTwDE = 1 : DE with constant Eos determined by EFTw0
#      EFTwDE = 2 : CPL parametrization
#      EFTwDE = 3 : JBP parametrization
#      EFTwDE = 4 : turning point parametrization
#      EFTwDE = 5 : Taylor expansion
#      EFTwDE = 6 : User defined
EFTwDE = 0
# 3) Pure EFT model selection flag:
#	 The following structure applies to every operator and can be specified for every operator
#	 separately.
#
#      PureEFTmodel___ = 0 : Zero (operator ignored)	
#      PureEFTmodel___ = 1 : Constant model
#      PureEFTmodel___ = 2 : Linear model
#      PureEFTmodel___ = 3 : Power law model
#      PureEFTmodel___ = 4 : Exponential model
#      PureEFTmodel___ = 5 : User defined

PureEFTmodelOmega  = 1
PureEFTmodelAlpha1 = 1
PureEFTmodelAlpha2 = 0
PureEFTmodelAlpha3 = 0
PureEFTmodelAlpha4 = 0
PureEFTmodelAlpha5 = 0
PureEFTmodelAlpha6 = 0

# 4) Designer matching EFT model selection flag:
#      DesignerEFTmodel = 1 : designer f(R)	
#      DesignerEFTmodel = 2 : designer minimally coupled quintessence	

DesignerEFTmodel = 1

# 5) Matching EFT model selection flag:
#      No model implemented so far.

MatchingEFTmodel = 1




; Halofit non-linear power
[halofit]
file = cosmosis-standard-library/boltzmann/halofit/halofit_module.so
