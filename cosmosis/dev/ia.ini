[runtime]
; The test sampler just runs a single parameter set
sampler = test

[grid] 
nsample_dimension=3


[output]
filename=ia.txt
format=text

[test]
; These are the parameters for this sampler.
; In this case there is just one parameter
save_dir=ia
fatal_errors=T

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
[pipeline]
; The list of modules to be run, in this order.
; The modules named here must appear as sections below
modules = consistency camb halofit linear_alignment load_nz  shear_shear add_intrinsic 2pt cfhtlens
values = cosmosis/dev/ia_values.ini

likelihoods =  cfhtlens
extra_output = cosmological_parameters/sigma_8

; We can get a little more output during the run by setting some values
quiet=F
timing=T
debug=F

[linear_alignment]
file = cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
method = bk_corrected


[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py



[consistency]
file=cosmosis-standard-library/utility/consistency/consistency_interface.py
verbose=T
[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=2
num_massive_nu=1
;num_sterile_nu=1

[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so

; This is an example of a very simple module - it simple loads in 
; a file once at the start when setting up and supplies fixed data
; when executed.
[load_nz]
file = cosmosis-standard-library/number_density/load_nz/load_nz.py
filepath = cosmosis-standard-library/likelihood/cfhtlens/combined_nz.txt

; This module uses the Limber approximation to compute shear-shear C_ell
; given the shear kernel (which is derived from the number density and 
; from geometry)
[shear_shear]
file = cosmosis-standard-library/shear/spectra/interface.so
ell_min = 20.0
ell_max = 10000.0
n_ell = 150
intrinsic_alignments=T

; This module converts shear spectra from c_ell to xi(theta).
; It is slow and can be a little dodgy at small theta, so if you have a better
; version it would be great if you be happy to add it (or have us add it) to cosmosis
[2pt]
file = cosmosis-standard-library/shear/cl_to_xi/cl_to_xi_interface.py
theta_min = 1.0
theta_max = 50.0
n_theta = 50


; The CFHTLens likelihood
[cfhtlens]
file = cosmosis-standard-library/likelihood/cfhtlens/cfhtlens_interface.py

